document.addEventListener("DOMContentLoaded", function() {
    const cardsArray = [
      { name: "üîÆ", id: 1 },
      { name: "üëª", id: 2 },
      { name: "üßô", id: 3 },
      { name: "ü¶Ñ", id: 4 },
      { name: "üîÆ", id: 5 },
      { name: "üëª", id: 6 },
      { name: "üßô", id: 7 },
      { name: "ü¶Ñ", id: 8 }
    ];
  
    let firstCard = null;
    let secondCard = null;
    let lockBoard = false;
    let matchedPairs = 0;
    let timer = 0;
    let timerInterval = null;
  
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º —ç–∫—Ä–∞–Ω–∞
    const startScreen = document.getElementById("start-screen");
    const gameScreen = document.getElementById("game-screen");
    const endScreen = document.getElementById("end-screen");
    const timerElement = document.getElementById("timer");
    const finalTimeElement = document.getElementById("final-time");
  
    // –ö–Ω–æ–ø–∫–∏
    document.getElementById("start-button").addEventListener("click", () => {
      showScreen(gameScreen);
      startGame();
    });
    document.getElementById("restart-button").addEventListener("click", startGame); // –û–±–Ω–æ–≤–ª–µ–Ω–æ
  
    // –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    function startGame() {
      matchedPairs = 0;
      timer = 0;
      firstCard = null;
      secondCard = null;
      lockBoard = false;
  
      timerElement.textContent = `–í—Ä–µ–º—è: ${timer} —Å–µ–∫`;
      createBoard(); // –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
      showScreen(gameScreen); // –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –∏–≥—Ä—ã
  
      timerInterval = setInterval(() => {
        timer += 1;
        timerElement.textContent = `–í—Ä–µ–º—è: ${timer} —Å–µ–∫`;
      }, 1000);
    }
  
    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–æ–≤
    function showScreen(screen) {
      startScreen.style.display = "none";
      gameScreen.style.display = "none";
      endScreen.style.display = "none";
      screen.style.display = "block";
    }
  
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
    function createBoard() {
      const gameBoard = document.getElementById("game-board");
      gameBoard.innerHTML = ""; // –û—á–∏—Å—Ç–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω–æ–≤–æ–π –∏–≥—Ä—ã
      const shuffledCards = shuffle(cardsArray);
  
      shuffledCards.forEach((card) => {
        const cardElement = document.createElement("div");
        cardElement.classList.add("card");
        cardElement.dataset.id = card.id;
  
        // –õ–∏—Ü–µ–≤–∞—è –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞—Ä—Ç–æ—á–∫–∏
        cardElement.innerHTML = `
          <div class="card-front">‚ú®</div>
          <div class="card-back">${card.name}</div>
        `;
  
        cardElement.addEventListener("click", () => handleCardClick(cardElement, card));
        gameBoard.appendChild(cardElement);
      });
    }
  
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ
    function handleCardClick(cardElement, card) {
      if (lockBoard || cardElement.classList.contains("flipped") || cardElement.classList.contains("matched")) return;
  
      cardElement.classList.add("flipped");
  
      if (!firstCard) {
        firstCard = { cardElement, card };
      } else {
        secondCard = { cardElement, card };
        lockBoard = true;
  
        if (firstCard.card.name === secondCard.card.name) {
          // –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–≤–ø–∞–ª–∏
          setTimeout(() => {
            markCardsAsMatched();
            resetTurn();
          }, 500);
        } else {
          // –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–ª–∏
          setTimeout(() => {
            unflipCards();
            resetTurn();
          }, 1000);
        }
      }
    }
  
    // –ü–æ–º–µ—á–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞–∫ —Å–æ–≤–ø–∞–≤—à–∏–µ
    function markCardsAsMatched() {
      firstCard.cardElement.classList.add("matched");
      secondCard.cardElement.classList.add("matched");
  
      matchedPairs += 1;
  
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø–∞—Ä—ã —Å–æ–≤–ø–∞–ª–∏
      if (matchedPairs === cardsArray.length / 2) {
        clearInterval(timerInterval);
        setTimeout(() => {
          finalTimeElement.textContent = timer;
          showScreen(endScreen);
        }, 500);
      }
    }
  
    // –ü–µ—Ä–µ–≤–æ—Ä–æ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫ –æ–±—Ä–∞—Ç–Ω–æ
    function unflipCards() {
      if (firstCard && secondCard) {
        firstCard.cardElement.classList.remove("flipped");
        secondCard.cardElement.classList.remove("flipped");
      }
    }
  
    // –°–±—Ä–æ—Å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ö–æ–¥–∞
    function resetTurn() {
      firstCard = null;
      secondCard = null;
      lockBoard = false;
    }
  
    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫
    function shuffle(array) {
      return array.sort(() => Math.random() - 0.5);
    }
  });
  